displayName: 'Message Composer'       # Display name for the module that will be displayed in the UI.
moduleName: 'message-composer'        # Module name that will be used to reference the module, and uniquely identify the module and their versions.
description: 'Compose a customized message. Use double curly brackets (i.e. {{temperature}} or {{utils.getNodeName}}) to emplace data assigned to given label within the message or a built-in parameter.'       # Module description that will be displayed in the UI.
versionName: 'v1.1.0'                    # Module version name that will be used to reference the module version, and uniquely identify the module version with a common name.
isPublic: true                          # Boolean value that indicates if the module is Public or Private.
categories:                             # Array of category that will be used to group the module in the UI.
  - 'Experimental'
type: 'Processing'      # Module type (Input, Processing, Output) that will be used to group the module in the UI.
image:
  name: 'weevenetwork/message-composer'     # Image name from the docker registry.
  tag: 'v1.1.0'                               # Image tag from the docker registry.
  homepage: 'https://hub.docker.com/r/weevenetwork/message-composer'      # Image homepage from the docker registry.
repository: 'https://github.com/weeve-modules/message-composer'     # Repository URL to source code.
envs:                                   # Array of environment variables that will be used to configure the module. Also used to show related fields on the UI.
  - name: Message Content                   # name of the field to be displayed on the UI.
    key: MESSAGE_CONTENT                # key to set in the environment variables.
    description: Message content. Use double curly brackets to access labels from your data (i.e. to access data assigned to temperature label use {{temperature}}).     # Description/helper text for the field.
    value: 'Measured temperature reached {{temperature}} Celsius'                         # Value to be set in the environment variables.
    type: 'text'                    # Type of the field. Possible values are: ['text', 'select', 'boolean', 'date', 'time', 'dateTime-local', 'number', 'multiple', 'CSV', 'file']
    options: []
    dependencies: []                  # List of dependencies for the field. This field is only displayed if all the dependencies are met. If
  - name: Message Label
    key: MESSAGE_LABEL
    description: Label to assign message to in the output JSON object.
    value: 'alertMessage'
    type: 'text'
    options: []
    dependencies: []
ports: []
envPorts: []
mounts: []
envMounts: []
devices: []
envDevices: []
tags:                                   # Array of tags.
  - 'Python'
  - 'Message-Composer'
  - 'Write-Message'
  - 'Alert'
icon: 'https://icons-020-demo.s3.eu-central-1.amazonaws.com/mi_message-composer_processing.png'    # Icon URL that will be displayed in the UI.
